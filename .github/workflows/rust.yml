name: Rust

on:
  push:
    branches: [ '*' ]
    tags: [ 'v[0-9]+.[0-9]+.[0-9]+' ]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo target
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      - name: Cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
      - name: Cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
      - name: Clippy check
        uses: actions-rs/clippy-check@v1.0.5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload artifact `zkutil`
        uses: actions/upload-artifact@v1.0.0
        with:
          name: zkutil
          path: target/debug/zkutil

  test-json:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download artifact `zkutil`
        uses: actions/download-artifact@v1
        with:
          name: zkutil
      - name: Cache node_modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-node-json
      - name: Test
        run: |
          npm init -y
          npm install circom@0.0.35 snarkjs@0.1.20
          chmod +x ./zkutil/zkutil
          npx circom
          ./zkutil/zkutil setup
          ./zkutil/zkutil export-keys
          ./zkutil/zkutil generate-verifier
          npx snarkjs calculatewitness
          ./zkutil/zkutil prove
          ./zkutil/zkutil verify
          npx snarkjs verify

  test-r1cs:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download artifact `zkutil`
        uses: actions/download-artifact@v1
        with:
          name: zkutil
      - name: Cache node_modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-node-r1cs
      - name: Test
        run: |
          npm init -y
          npm install circom snarkjs
          chmod +x ./zkutil/zkutil
          npx circom -rw
          ./zkutil/zkutil setup
          ./zkutil/zkutil export-keys
          ./zkutil/zkutil generate-verifier
          npx snarkjs wc
          ./zkutil/zkutil prove
          ./zkutil/zkutil verify
          npx snarkjs g16v

  publish:
    runs-on: ubuntu-latest
    needs: [test-json, test-r1cs]
    if: startsWith(github.ref, 'refs/tags')
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Check Cargo.toml version vs tag
        run: |
          [ ${GITHUB_REF#refs/tags/v} = $(grep "^version" Cargo.toml | grep -o "[0-9.]*") ] || (echo "Git tag doesn't match version in Cargo.toml" && false)
      - name: Publish to crates.io
        uses: actions-rs/cargo@v1
        with:
          command: publish
          args: --no-verify --token ${{ secrets.CRATES_IO_TOKEN }}
